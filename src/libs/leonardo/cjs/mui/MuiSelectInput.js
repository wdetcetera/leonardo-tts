"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MuiSelectInput = MuiSelectInput;

var _material = require("@mui/material");

var _react = _interopRequireDefault(require("react"));

function MuiSelectInput({
  chatController,
  actionRequest
}) {
  const chatCtl = chatController;

  const setResponse = _react.default.useCallback(value => {
    const option = actionRequest.options.find(o => o.value === value);

    if (!option) {
      throw new Error(`Unknown value: ${value}`);
    }

    const res = {
      type: 'select',
      value: option.text,
      option
    };
    chatCtl.setActionResponse(actionRequest, res);
  }, [actionRequest, chatCtl]);

  return /*#__PURE__*/_react.default.createElement(_material.Box, {
    sx: {
      flex: '1 1 auto',
      display: 'flex',
      flexDirection: 'column',
      '& > *': {
        flex: '0 0 auto',
        maxWidth: '100%'
      },
      '& > * + *': {
        mt: 1
      }
    }
  }, actionRequest.options.map(o => /*#__PURE__*/_react.default.createElement(_material.Button, {
    key: actionRequest.options.indexOf(o),
    type: "button",
    value: o.value,
    onClick: e => setResponse(e.currentTarget.value),
    variant: "contained",
    color: "primary"
  }, o.text)));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tdWkvTXVpU2VsZWN0SW5wdXQudHN4Il0sIm5hbWVzIjpbIk11aVNlbGVjdElucHV0IiwiY2hhdENvbnRyb2xsZXIiLCJhY3Rpb25SZXF1ZXN0IiwiY2hhdEN0bCIsInNldFJlc3BvbnNlIiwiUmVhY3QiLCJ1c2VDYWxsYmFjayIsInZhbHVlIiwib3B0aW9uIiwib3B0aW9ucyIsImZpbmQiLCJvIiwiRXJyb3IiLCJyZXMiLCJ0eXBlIiwidGV4dCIsInNldEFjdGlvblJlc3BvbnNlIiwiZmxleCIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwibWF4V2lkdGgiLCJtdCIsIm1hcCIsImluZGV4T2YiLCJlIiwiY3VycmVudFRhcmdldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBS08sU0FBU0EsY0FBVCxDQUF3QjtBQUM3QkMsRUFBQUEsY0FENkI7QUFFN0JDLEVBQUFBO0FBRjZCLENBQXhCLEVBTWdCO0FBQ3JCLFFBQU1DLE9BQU8sR0FBR0YsY0FBaEI7O0FBRUEsUUFBTUcsV0FBVyxHQUFHQyxlQUFNQyxXQUFOLENBQ2pCQyxLQUFELElBQXlCO0FBQ3ZCLFVBQU1DLE1BQU0sR0FBR04sYUFBYSxDQUFDTyxPQUFkLENBQXNCQyxJQUF0QixDQUE0QkMsQ0FBRCxJQUFPQSxDQUFDLENBQUNKLEtBQUYsS0FBWUEsS0FBOUMsQ0FBZjs7QUFDQSxRQUFJLENBQUNDLE1BQUwsRUFBYTtBQUNYLFlBQU0sSUFBSUksS0FBSixDQUFXLGtCQUFpQkwsS0FBTSxFQUFsQyxDQUFOO0FBQ0Q7O0FBQ0QsVUFBTU0sR0FBeUIsR0FBRztBQUNoQ0MsTUFBQUEsSUFBSSxFQUFFLFFBRDBCO0FBRWhDUCxNQUFBQSxLQUFLLEVBQUVDLE1BQU0sQ0FBQ08sSUFGa0I7QUFHaENQLE1BQUFBO0FBSGdDLEtBQWxDO0FBS0FMLElBQUFBLE9BQU8sQ0FBQ2EsaUJBQVIsQ0FBMEJkLGFBQTFCLEVBQXlDVyxHQUF6QztBQUNELEdBWmlCLEVBYWxCLENBQUNYLGFBQUQsRUFBZ0JDLE9BQWhCLENBYmtCLENBQXBCOztBQWdCQSxzQkFDRSw2QkFBQyxhQUFEO0FBQ0UsSUFBQSxFQUFFLEVBQUU7QUFDRmMsTUFBQUEsSUFBSSxFQUFFLFVBREo7QUFFRkMsTUFBQUEsT0FBTyxFQUFFLE1BRlA7QUFHRkMsTUFBQUEsYUFBYSxFQUFFLFFBSGI7QUFJRixlQUFTO0FBQ1BGLFFBQUFBLElBQUksRUFBRSxVQURDO0FBRVBHLFFBQUFBLFFBQVEsRUFBRTtBQUZILE9BSlA7QUFRRixtQkFBYTtBQUNYQyxRQUFBQSxFQUFFLEVBQUU7QUFETztBQVJYO0FBRE4sS0FjR25CLGFBQWEsQ0FBQ08sT0FBZCxDQUFzQmEsR0FBdEIsQ0FBMkJYLENBQUQsaUJBQ3pCLDZCQUFDLGdCQUFEO0FBQ0UsSUFBQSxHQUFHLEVBQUVULGFBQWEsQ0FBQ08sT0FBZCxDQUFzQmMsT0FBdEIsQ0FBOEJaLENBQTlCLENBRFA7QUFFRSxJQUFBLElBQUksRUFBQyxRQUZQO0FBR0UsSUFBQSxLQUFLLEVBQUVBLENBQUMsQ0FBQ0osS0FIWDtBQUlFLElBQUEsT0FBTyxFQUFHaUIsQ0FBRCxJQUFhcEIsV0FBVyxDQUFDb0IsQ0FBQyxDQUFDQyxhQUFGLENBQWdCbEIsS0FBakIsQ0FKbkM7QUFLRSxJQUFBLE9BQU8sRUFBQyxXQUxWO0FBTUUsSUFBQSxLQUFLLEVBQUM7QUFOUixLQVFHSSxDQUFDLENBQUNJLElBUkwsQ0FERCxDQWRILENBREY7QUE2QkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb3gsIEJ1dHRvbiB9IGZyb20gJ0BtdWkvbWF0ZXJpYWwnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgQ2hhdENvbnRyb2xsZXIgfSBmcm9tICcuLi9jaGF0LWNvbnRyb2xsZXInO1xuaW1wb3J0IHsgU2VsZWN0QWN0aW9uUmVxdWVzdCwgU2VsZWN0QWN0aW9uUmVzcG9uc2UgfSBmcm9tICcuLi9jaGF0LXR5cGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIE11aVNlbGVjdElucHV0KHtcbiAgY2hhdENvbnRyb2xsZXIsXG4gIGFjdGlvblJlcXVlc3QsXG59OiB7XG4gIGNoYXRDb250cm9sbGVyOiBDaGF0Q29udHJvbGxlcjtcbiAgYWN0aW9uUmVxdWVzdDogU2VsZWN0QWN0aW9uUmVxdWVzdDtcbn0pOiBSZWFjdC5SZWFjdEVsZW1lbnQge1xuICBjb25zdCBjaGF0Q3RsID0gY2hhdENvbnRyb2xsZXI7XG5cbiAgY29uc3Qgc2V0UmVzcG9uc2UgPSBSZWFjdC51c2VDYWxsYmFjayhcbiAgICAodmFsdWU6IHN0cmluZyk6IHZvaWQgPT4ge1xuICAgICAgY29uc3Qgb3B0aW9uID0gYWN0aW9uUmVxdWVzdC5vcHRpb25zLmZpbmQoKG8pID0+IG8udmFsdWUgPT09IHZhbHVlKTtcbiAgICAgIGlmICghb3B0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biB2YWx1ZTogJHt2YWx1ZX1gKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHJlczogU2VsZWN0QWN0aW9uUmVzcG9uc2UgPSB7XG4gICAgICAgIHR5cGU6ICdzZWxlY3QnLFxuICAgICAgICB2YWx1ZTogb3B0aW9uLnRleHQsXG4gICAgICAgIG9wdGlvbixcbiAgICAgIH07XG4gICAgICBjaGF0Q3RsLnNldEFjdGlvblJlc3BvbnNlKGFjdGlvblJlcXVlc3QsIHJlcyk7XG4gICAgfSxcbiAgICBbYWN0aW9uUmVxdWVzdCwgY2hhdEN0bF0sXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8Qm94XG4gICAgICBzeD17e1xuICAgICAgICBmbGV4OiAnMSAxIGF1dG8nLFxuICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgICAnJiA+IConOiB7XG4gICAgICAgICAgZmxleDogJzAgMCBhdXRvJyxcbiAgICAgICAgICBtYXhXaWR0aDogJzEwMCUnLFxuICAgICAgICB9LFxuICAgICAgICAnJiA+ICogKyAqJzoge1xuICAgICAgICAgIG10OiAxLFxuICAgICAgICB9LFxuICAgICAgfX1cbiAgICA+XG4gICAgICB7YWN0aW9uUmVxdWVzdC5vcHRpb25zLm1hcCgobykgPT4gKFxuICAgICAgICA8QnV0dG9uXG4gICAgICAgICAga2V5PXthY3Rpb25SZXF1ZXN0Lm9wdGlvbnMuaW5kZXhPZihvKX1cbiAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICB2YWx1ZT17by52YWx1ZX1cbiAgICAgICAgICBvbkNsaWNrPXsoZSk6IHZvaWQgPT4gc2V0UmVzcG9uc2UoZS5jdXJyZW50VGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICB2YXJpYW50PVwiY29udGFpbmVkXCJcbiAgICAgICAgICBjb2xvcj1cInByaW1hcnlcIlxuICAgICAgICA+XG4gICAgICAgICAge28udGV4dH1cbiAgICAgICAgPC9CdXR0b24+XG4gICAgICApKX1cbiAgICA8L0JveD5cbiAgKTtcbn1cbiJdfQ==