"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MuiMessage = MuiMessage;

var _material = require("@mui/material");

var _react = _interopRequireDefault(require("react"));

function MuiMessage({
  id,
  message,
  showDate,
  showTime
}) {
  if (message.deletedAt) {
    return /*#__PURE__*/_react.default.createElement("div", {
      id: id
    });
  }

  const dispDate = message.updatedAt ? message.updatedAt : message.createdAt;

  const ChatAvator = /*#__PURE__*/_react.default.createElement(_material.Box, {
    minWidth: 0,
    flexShrink: 0,
    ml: message.self ? 1 : 0,
    mr: message.self ? 0 : 1
  }, /*#__PURE__*/_react.default.createElement(_material.Avatar, {
    alt: message.username,
    src: message.avatar
  }));

  const ChatUsername = /*#__PURE__*/_react.default.createElement(_material.Box, {
    maxWidth: "100%",
    mx: 1
  }, /*#__PURE__*/_react.default.createElement(_material.Typography, {
    variant: "body2",
    align: message.self ? 'right' : 'left'
  }, message.username));

  const ChatDate = /*#__PURE__*/_react.default.createElement(_material.Box, {
    maxWidth: "100%",
    mx: 1
  }, /*#__PURE__*/_react.default.createElement(_material.Typography, {
    variant: "body2",
    align: message.self ? 'right' : 'left',
    color: "textSecondary"
  }, dispDate === null || dispDate === void 0 ? void 0 : dispDate.toLocaleTimeString([], {
    hour: '2-digit',
    minute: '2-digit'
  })));

  return /*#__PURE__*/_react.default.createElement(_material.Grow, {
    in: true
  }, /*#__PURE__*/_react.default.createElement(_material.Box, {
    maxWidth: "100%",
    display: "flex",
    flexDirection: "column"
  }, showDate && /*#__PURE__*/_react.default.createElement(_material.Typography, {
    align: "center"
  }, dispDate === null || dispDate === void 0 ? void 0 : dispDate.toLocaleDateString()), /*#__PURE__*/_react.default.createElement(_material.Box, {
    id: id,
    maxWidth: "100%",
    my: 1,
    pl: message.self ? '20%' : 0,
    pr: message.self ? 0 : '20%',
    display: "flex",
    justifyContent: message.self ? 'flex-end' : 'flex-start',
    style: {
      overflowWrap: 'break-word'
    }
  }, message.avatar && !message.self && ChatAvator, /*#__PURE__*/_react.default.createElement(_material.Box, {
    minWidth: 0,
    display: "flex",
    flexDirection: "column"
  }, message.username && ChatUsername, /*#__PURE__*/_react.default.createElement(_material.Box, {
    maxWidth: "100%",
    py: 1,
    px: 2,
    bgcolor: message.self ? 'primary.main' : 'background.paper',
    color: message.self ? 'primary.contrastText' : 'text.primary',
    borderRadius: 4,
    boxShadow: 2
  }, message.type === 'text' && /*#__PURE__*/_react.default.createElement(_material.Typography, {
    variant: "body1",
    style: {
      whiteSpace: 'pre-wrap'
    }
  }, message.content), message.type === 'jsx' && /*#__PURE__*/_react.default.createElement("div", null, message.content)), showTime && ChatDate), message.avatar && message.self && ChatAvator)));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tdWkvTXVpTWVzc2FnZS50c3giXSwibmFtZXMiOlsiTXVpTWVzc2FnZSIsImlkIiwibWVzc2FnZSIsInNob3dEYXRlIiwic2hvd1RpbWUiLCJkZWxldGVkQXQiLCJkaXNwRGF0ZSIsInVwZGF0ZWRBdCIsImNyZWF0ZWRBdCIsIkNoYXRBdmF0b3IiLCJzZWxmIiwidXNlcm5hbWUiLCJhdmF0YXIiLCJDaGF0VXNlcm5hbWUiLCJDaGF0RGF0ZSIsInRvTG9jYWxlVGltZVN0cmluZyIsImhvdXIiLCJtaW51dGUiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJvdmVyZmxvd1dyYXAiLCJ0eXBlIiwid2hpdGVTcGFjZSIsImNvbnRlbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUlPLFNBQVNBLFVBQVQsQ0FBb0I7QUFDekJDLEVBQUFBLEVBRHlCO0FBRXpCQyxFQUFBQSxPQUZ5QjtBQUd6QkMsRUFBQUEsUUFIeUI7QUFJekJDLEVBQUFBO0FBSnlCLENBQXBCLEVBVWdCO0FBQ3JCLE1BQUlGLE9BQU8sQ0FBQ0csU0FBWixFQUF1QjtBQUNyQix3QkFBTztBQUFLLE1BQUEsRUFBRSxFQUFFSjtBQUFULE1BQVA7QUFDRDs7QUFFRCxRQUFNSyxRQUFRLEdBQUdKLE9BQU8sQ0FBQ0ssU0FBUixHQUFvQkwsT0FBTyxDQUFDSyxTQUE1QixHQUF3Q0wsT0FBTyxDQUFDTSxTQUFqRTs7QUFFQSxRQUFNQyxVQUFVLGdCQUNkLDZCQUFDLGFBQUQ7QUFDRSxJQUFBLFFBQVEsRUFBRSxDQURaO0FBRUUsSUFBQSxVQUFVLEVBQUUsQ0FGZDtBQUdFLElBQUEsRUFBRSxFQUFFUCxPQUFPLENBQUNRLElBQVIsR0FBZSxDQUFmLEdBQW1CLENBSHpCO0FBSUUsSUFBQSxFQUFFLEVBQUVSLE9BQU8sQ0FBQ1EsSUFBUixHQUFlLENBQWYsR0FBbUI7QUFKekIsa0JBTUUsNkJBQUMsZ0JBQUQ7QUFBUSxJQUFBLEdBQUcsRUFBRVIsT0FBTyxDQUFDUyxR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VUFBVSxFQUFFO0FBQWQ7QUFBbkMsS0FDR25CLE9BQU8sQ0FBQ29CLE9BRFgsQ0FWSixFQWNHcEIsT0FBTyxDQUFDa0IsSUFBUixLQUFpQixLQUFqQixpQkFBMEIsMENBQU1sQixPQUFPLENBQUNvQixPQUFkLENBZDdCLENBRkYsRUFrQkdsQixRQUFRLElBQUlVLFFBbEJmLENBWEYsRUErQkdaLE9BQU8sQ0FBQ1UsTUFBUixJQUFrQlYsT0FBTyxDQUFDUSxJQUExQixJQUFrQ0QsVUEvQnJDLENBTkYsQ0FERixDQURGO0FBNENEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXZhdGFyLCBCb3gsIEdyb3csIFR5cG9ncmFwaHkgfSBmcm9tICdAbXVpL21hdGVyaWFsJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IE1lc3NhZ2UsIE1lc3NhZ2VDb250ZW50IH0gZnJvbSAnLi4vY2hhdC10eXBlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBNdWlNZXNzYWdlKHtcbiAgaWQsXG4gIG1lc3NhZ2UsXG4gIHNob3dEYXRlLFxuICBzaG93VGltZSxcbn06IHtcbiAgaWQ6IHN0cmluZztcbiAgbWVzc2FnZTogTWVzc2FnZTxNZXNzYWdlQ29udGVudD47XG4gIHNob3dEYXRlOiBib29sZWFuO1xuICBzaG93VGltZTogYm9vbGVhbjtcbn0pOiBSZWFjdC5SZWFjdEVsZW1lbnQge1xuICBpZiAobWVzc2FnZS5kZWxldGVkQXQpIHtcbiAgICByZXR1cm4gPGRpdiBpZD17aWR9IC8+O1xuICB9XG5cbiAgY29uc3QgZGlzcERhdGUgPSBtZXNzYWdlLnVwZGF0ZWRBdCA/IG1lc3NhZ2UudXBkYXRlZEF0IDogbWVzc2FnZS5jcmVhdGVkQXQ7XG5cbiAgY29uc3QgQ2hhdEF2YXRvciA9IChcbiAgICA8Qm94XG4gICAgICBtaW5XaWR0aD17MH1cbiAgICAgIGZsZXhTaHJpbms9ezB9XG4gICAgICBtbD17bWVzc2FnZS5zZWxmID8gMSA6IDB9XG4gICAgICBtcj17bWVzc2FnZS5zZWxmID8gMCA6IDF9XG4gICAgPlxuICAgICAgPEF2YXRhciBhbHQ9e21lc3NhZ2UudXNlcm5hbWV9IHNyYz17bWVzc2FnZS5hdmF0YXJ9IC8+XG4gICAgPC9Cb3g+XG4gICk7XG5cbiAgY29uc3QgQ2hhdFVzZXJuYW1lID0gKFxuICAgIDxCb3ggbWF4V2lkdGg9XCIxMDAlXCIgbXg9ezF9PlxuICAgICAgPFR5cG9ncmFwaHkgdmFyaWFudD1cImJvZHkyXCIgYWxpZ249e21lc3NhZ2Uuc2VsZiA/ICdyaWdodCcgOiAnbGVmdCd9PlxuICAgICAgICB7bWVzc2FnZS51c2VybmFtZX1cbiAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICA8L0JveD5cbiAgKTtcblxuICBjb25zdCBDaGF0RGF0ZSA9IChcbiAgICA8Qm94IG1heFdpZHRoPVwiMTAwJVwiIG14PXsxfT5cbiAgICAgIDxUeXBvZ3JhcGh5XG4gICAgICAgIHZhcmlhbnQ9XCJib2R5MlwiXG4gICAgICAgIGFsaWduPXttZXNzYWdlLnNlbGYgPyAncmlnaHQnIDogJ2xlZnQnfVxuICAgICAgICBjb2xvcj1cInRleHRTZWNvbmRhcnlcIlxuICAgICAgPlxuICAgICAgICB7ZGlzcERhdGU/LnRvTG9jYWxlVGltZVN0cmluZyhbXSwge1xuICAgICAgICAgIGhvdXI6ICcyLWRpZ2l0JyxcbiAgICAgICAgICBtaW51dGU6ICcyLWRpZ2l0JyxcbiAgICAgICAgfSl9XG4gICAgICA8L1R5cG9ncmFwaHk+XG4gICAgPC9Cb3g+XG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8R3JvdyBpbj5cbiAgICAgIDxCb3ggbWF4V2lkdGg9XCIxMDAlXCIgZGlzcGxheT1cImZsZXhcIiBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XG4gICAgICAgIHtzaG93RGF0ZSAmJiAoXG4gICAgICAgICAgPFR5cG9ncmFwaHkgYWxpZ249XCJjZW50ZXJcIj5cbiAgICAgICAgICAgIHtkaXNwRGF0ZT8udG9Mb2NhbGVEYXRlU3RyaW5nKCl9XG4gICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICApfVxuICAgICAgICA8Qm94XG4gICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgIG1heFdpZHRoPVwiMTAwJVwiXG4gICAgICAgICAgbXk9ezF9XG4gICAgICAgICAgcGw9e21lc3NhZ2Uuc2VsZiA/ICcyMCUnIDogMH1cbiAgICAgICAgICBwcj17bWVzc2FnZS5zZWxmID8gMCA6ICcyMCUnfVxuICAgICAgICAgIGRpc3BsYXk9XCJmbGV4XCJcbiAgICAgICAgICBqdXN0aWZ5Q29udGVudD17bWVzc2FnZS5zZWxmID8gJ2ZsZXgtZW5kJyA6ICdmbGV4LXN0YXJ0J31cbiAgICAgICAgICBzdHlsZT17eyBvdmVyZmxvd1dyYXA6ICdicmVhay13b3JkJyB9fVxuICAgICAgICA+XG4gICAgICAgICAge21lc3NhZ2UuYXZhdGFyICYmICFtZXNzYWdlLnNlbGYgJiYgQ2hhdEF2YXRvcn1cbiAgICAgICAgICA8Qm94IG1pbldpZHRoPXswfSBkaXNwbGF5PVwiZmxleFwiIGZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIj5cbiAgICAgICAgICAgIHttZXNzYWdlLnVzZXJuYW1lICYmIENoYXRVc2VybmFtZX1cbiAgICAgICAgICAgIDxCb3hcbiAgICAgICAgICAgICAgbWF4V2lkdGg9XCIxMDAlXCJcbiAgICAgICAgICAgICAgcHk9ezF9XG4gICAgICAgICAgICAgIHB4PXsyfVxuICAgICAgICAgICAgICBiZ2NvbG9yPXttZXNzYWdlLnNlbGYgPyAncHJpbWFyeS5tYWluJyA6ICdiYWNrZ3JvdW5kLnBhcGVyJ31cbiAgICAgICAgICAgICAgY29sb3I9e21lc3NhZ2Uuc2VsZiA/ICdwcmltYXJ5LmNvbnRyYXN0VGV4dCcgOiAndGV4dC5wcmltYXJ5J31cbiAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzPXs0fVxuICAgICAgICAgICAgICBib3hTaGFkb3c9ezJ9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHttZXNzYWdlLnR5cGUgPT09ICd0ZXh0JyAmJiAoXG4gICAgICAgICAgICAgICAgPFR5cG9ncmFwaHkgdmFyaWFudD1cImJvZHkxXCIgc3R5bGU9e3sgd2hpdGVTcGFjZTogJ3ByZS13cmFwJyB9fT5cbiAgICAgICAgICAgICAgICAgIHttZXNzYWdlLmNvbnRlbnR9XG4gICAgICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICB7bWVzc2FnZS50eXBlID09PSAnanN4JyAmJiA8ZGl2PnttZXNzYWdlLmNvbnRlbnR9PC9kaXY+fVxuICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICB7c2hvd1RpbWUgJiYgQ2hhdERhdGV9XG4gICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAge21lc3NhZ2UuYXZhdGFyICYmIG1lc3NhZ2Uuc2VsZiAmJiBDaGF0QXZhdG9yfVxuICAgICAgICA8L0JveD5cbiAgICAgIDwvQm94PlxuICAgIDwvR3Jvdz5cbiAgKTtcbn1cbiJdfQ==